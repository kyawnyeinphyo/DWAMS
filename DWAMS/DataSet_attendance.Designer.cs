//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DWAMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_attendance")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_attendance : global::System.Data.DataSet {
        
        private Attendance_selectDataTable tableAttendance_select;
        
        private Attendance_select_by_dateDataTable tableAttendance_select_by_date;
        
        private Attendance_by_staffDataTable tableAttendance_by_staff;
        
        private Attendance_by_staff_and_dateDataTable tableAttendance_by_staff_and_date;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_attendance() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_attendance(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Attendance_select"] != null)) {
                    base.Tables.Add(new Attendance_selectDataTable(ds.Tables["Attendance_select"]));
                }
                if ((ds.Tables["Attendance_select_by_date"] != null)) {
                    base.Tables.Add(new Attendance_select_by_dateDataTable(ds.Tables["Attendance_select_by_date"]));
                }
                if ((ds.Tables["Attendance_by_staff"] != null)) {
                    base.Tables.Add(new Attendance_by_staffDataTable(ds.Tables["Attendance_by_staff"]));
                }
                if ((ds.Tables["Attendance_by_staff_and_date"] != null)) {
                    base.Tables.Add(new Attendance_by_staff_and_dateDataTable(ds.Tables["Attendance_by_staff_and_date"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Attendance_selectDataTable Attendance_select {
            get {
                return this.tableAttendance_select;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Attendance_select_by_dateDataTable Attendance_select_by_date {
            get {
                return this.tableAttendance_select_by_date;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Attendance_by_staffDataTable Attendance_by_staff {
            get {
                return this.tableAttendance_by_staff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Attendance_by_staff_and_dateDataTable Attendance_by_staff_and_date {
            get {
                return this.tableAttendance_by_staff_and_date;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_attendance cln = ((DataSet_attendance)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Attendance_select"] != null)) {
                    base.Tables.Add(new Attendance_selectDataTable(ds.Tables["Attendance_select"]));
                }
                if ((ds.Tables["Attendance_select_by_date"] != null)) {
                    base.Tables.Add(new Attendance_select_by_dateDataTable(ds.Tables["Attendance_select_by_date"]));
                }
                if ((ds.Tables["Attendance_by_staff"] != null)) {
                    base.Tables.Add(new Attendance_by_staffDataTable(ds.Tables["Attendance_by_staff"]));
                }
                if ((ds.Tables["Attendance_by_staff_and_date"] != null)) {
                    base.Tables.Add(new Attendance_by_staff_and_dateDataTable(ds.Tables["Attendance_by_staff_and_date"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAttendance_select = ((Attendance_selectDataTable)(base.Tables["Attendance_select"]));
            if ((initTable == true)) {
                if ((this.tableAttendance_select != null)) {
                    this.tableAttendance_select.InitVars();
                }
            }
            this.tableAttendance_select_by_date = ((Attendance_select_by_dateDataTable)(base.Tables["Attendance_select_by_date"]));
            if ((initTable == true)) {
                if ((this.tableAttendance_select_by_date != null)) {
                    this.tableAttendance_select_by_date.InitVars();
                }
            }
            this.tableAttendance_by_staff = ((Attendance_by_staffDataTable)(base.Tables["Attendance_by_staff"]));
            if ((initTable == true)) {
                if ((this.tableAttendance_by_staff != null)) {
                    this.tableAttendance_by_staff.InitVars();
                }
            }
            this.tableAttendance_by_staff_and_date = ((Attendance_by_staff_and_dateDataTable)(base.Tables["Attendance_by_staff_and_date"]));
            if ((initTable == true)) {
                if ((this.tableAttendance_by_staff_and_date != null)) {
                    this.tableAttendance_by_staff_and_date.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_attendance";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_attendance.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAttendance_select = new Attendance_selectDataTable();
            base.Tables.Add(this.tableAttendance_select);
            this.tableAttendance_select_by_date = new Attendance_select_by_dateDataTable();
            base.Tables.Add(this.tableAttendance_select_by_date);
            this.tableAttendance_by_staff = new Attendance_by_staffDataTable();
            base.Tables.Add(this.tableAttendance_by_staff);
            this.tableAttendance_by_staff_and_date = new Attendance_by_staff_and_dateDataTable();
            base.Tables.Add(this.tableAttendance_by_staff_and_date);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAttendance_select() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAttendance_select_by_date() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAttendance_by_staff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAttendance_by_staff_and_date() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_attendance ds = new DataSet_attendance();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Attendance_selectRowChangeEventHandler(object sender, Attendance_selectRowChangeEvent e);
        
        public delegate void Attendance_select_by_dateRowChangeEventHandler(object sender, Attendance_select_by_dateRowChangeEvent e);
        
        public delegate void Attendance_by_staffRowChangeEventHandler(object sender, Attendance_by_staffRowChangeEvent e);
        
        public delegate void Attendance_by_staff_and_dateRowChangeEventHandler(object sender, Attendance_by_staff_and_dateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Attendance_selectDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectDataTable() {
                this.TableName = "Attendance_select";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_selectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Attendance_selectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectRow this[int index] {
                get {
                    return ((Attendance_selectRow)(this.Rows[index]));
                }
            }
            
            public event Attendance_selectRowChangeEventHandler Attendance_selectRowChanging;
            
            public event Attendance_selectRowChangeEventHandler Attendance_selectRowChanged;
            
            public event Attendance_selectRowChangeEventHandler Attendance_selectRowDeleting;
            
            public event Attendance_selectRowChangeEventHandler Attendance_selectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAttendance_selectRow(Attendance_selectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectRow AddAttendance_selectRow(System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                Attendance_selectRow rowAttendance_selectRow = ((Attendance_selectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowAttendance_selectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttendance_selectRow);
                return rowAttendance_selectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Attendance_selectDataTable cln = ((Attendance_selectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Attendance_selectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectRow NewAttendance_selectRow() {
                return ((Attendance_selectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Attendance_selectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Attendance_selectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Attendance_selectRowChanged != null)) {
                    this.Attendance_selectRowChanged(this, new Attendance_selectRowChangeEvent(((Attendance_selectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Attendance_selectRowChanging != null)) {
                    this.Attendance_selectRowChanging(this, new Attendance_selectRowChangeEvent(((Attendance_selectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Attendance_selectRowDeleted != null)) {
                    this.Attendance_selectRowDeleted(this, new Attendance_selectRowChangeEvent(((Attendance_selectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Attendance_selectRowDeleting != null)) {
                    this.Attendance_selectRowDeleting(this, new Attendance_selectRowChangeEvent(((Attendance_selectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAttendance_selectRow(Attendance_selectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_attendance ds = new DataSet_attendance();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Attendance_selectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Attendance_select_by_dateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateDataTable() {
                this.TableName = "Attendance_select_by_date";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_select_by_dateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Attendance_select_by_dateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateRow this[int index] {
                get {
                    return ((Attendance_select_by_dateRow)(this.Rows[index]));
                }
            }
            
            public event Attendance_select_by_dateRowChangeEventHandler Attendance_select_by_dateRowChanging;
            
            public event Attendance_select_by_dateRowChangeEventHandler Attendance_select_by_dateRowChanged;
            
            public event Attendance_select_by_dateRowChangeEventHandler Attendance_select_by_dateRowDeleting;
            
            public event Attendance_select_by_dateRowChangeEventHandler Attendance_select_by_dateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAttendance_select_by_dateRow(Attendance_select_by_dateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateRow AddAttendance_select_by_dateRow(System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                Attendance_select_by_dateRow rowAttendance_select_by_dateRow = ((Attendance_select_by_dateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowAttendance_select_by_dateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttendance_select_by_dateRow);
                return rowAttendance_select_by_dateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Attendance_select_by_dateDataTable cln = ((Attendance_select_by_dateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Attendance_select_by_dateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateRow NewAttendance_select_by_dateRow() {
                return ((Attendance_select_by_dateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Attendance_select_by_dateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Attendance_select_by_dateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Attendance_select_by_dateRowChanged != null)) {
                    this.Attendance_select_by_dateRowChanged(this, new Attendance_select_by_dateRowChangeEvent(((Attendance_select_by_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Attendance_select_by_dateRowChanging != null)) {
                    this.Attendance_select_by_dateRowChanging(this, new Attendance_select_by_dateRowChangeEvent(((Attendance_select_by_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Attendance_select_by_dateRowDeleted != null)) {
                    this.Attendance_select_by_dateRowDeleted(this, new Attendance_select_by_dateRowChangeEvent(((Attendance_select_by_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Attendance_select_by_dateRowDeleting != null)) {
                    this.Attendance_select_by_dateRowDeleting(this, new Attendance_select_by_dateRowChangeEvent(((Attendance_select_by_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAttendance_select_by_dateRow(Attendance_select_by_dateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_attendance ds = new DataSet_attendance();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Attendance_select_by_dateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Attendance_by_staffDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffDataTable() {
                this.TableName = "Attendance_by_staff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_by_staffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Attendance_by_staffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffRow this[int index] {
                get {
                    return ((Attendance_by_staffRow)(this.Rows[index]));
                }
            }
            
            public event Attendance_by_staffRowChangeEventHandler Attendance_by_staffRowChanging;
            
            public event Attendance_by_staffRowChangeEventHandler Attendance_by_staffRowChanged;
            
            public event Attendance_by_staffRowChangeEventHandler Attendance_by_staffRowDeleting;
            
            public event Attendance_by_staffRowChangeEventHandler Attendance_by_staffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAttendance_by_staffRow(Attendance_by_staffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffRow AddAttendance_by_staffRow(System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                Attendance_by_staffRow rowAttendance_by_staffRow = ((Attendance_by_staffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowAttendance_by_staffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttendance_by_staffRow);
                return rowAttendance_by_staffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Attendance_by_staffDataTable cln = ((Attendance_by_staffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Attendance_by_staffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffRow NewAttendance_by_staffRow() {
                return ((Attendance_by_staffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Attendance_by_staffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Attendance_by_staffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Attendance_by_staffRowChanged != null)) {
                    this.Attendance_by_staffRowChanged(this, new Attendance_by_staffRowChangeEvent(((Attendance_by_staffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Attendance_by_staffRowChanging != null)) {
                    this.Attendance_by_staffRowChanging(this, new Attendance_by_staffRowChangeEvent(((Attendance_by_staffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Attendance_by_staffRowDeleted != null)) {
                    this.Attendance_by_staffRowDeleted(this, new Attendance_by_staffRowChangeEvent(((Attendance_by_staffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Attendance_by_staffRowDeleting != null)) {
                    this.Attendance_by_staffRowDeleting(this, new Attendance_by_staffRowChangeEvent(((Attendance_by_staffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAttendance_by_staffRow(Attendance_by_staffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_attendance ds = new DataSet_attendance();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Attendance_by_staffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Attendance_by_staff_and_dateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateDataTable() {
                this.TableName = "Attendance_by_staff_and_date";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_by_staff_and_dateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Attendance_by_staff_and_dateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateRow this[int index] {
                get {
                    return ((Attendance_by_staff_and_dateRow)(this.Rows[index]));
                }
            }
            
            public event Attendance_by_staff_and_dateRowChangeEventHandler Attendance_by_staff_and_dateRowChanging;
            
            public event Attendance_by_staff_and_dateRowChangeEventHandler Attendance_by_staff_and_dateRowChanged;
            
            public event Attendance_by_staff_and_dateRowChangeEventHandler Attendance_by_staff_and_dateRowDeleting;
            
            public event Attendance_by_staff_and_dateRowChangeEventHandler Attendance_by_staff_and_dateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAttendance_by_staff_and_dateRow(Attendance_by_staff_and_dateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateRow AddAttendance_by_staff_and_dateRow(System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                Attendance_by_staff_and_dateRow rowAttendance_by_staff_and_dateRow = ((Attendance_by_staff_and_dateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowAttendance_by_staff_and_dateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttendance_by_staff_and_dateRow);
                return rowAttendance_by_staff_and_dateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Attendance_by_staff_and_dateDataTable cln = ((Attendance_by_staff_and_dateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Attendance_by_staff_and_dateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateRow NewAttendance_by_staff_and_dateRow() {
                return ((Attendance_by_staff_and_dateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Attendance_by_staff_and_dateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Attendance_by_staff_and_dateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Attendance_by_staff_and_dateRowChanged != null)) {
                    this.Attendance_by_staff_and_dateRowChanged(this, new Attendance_by_staff_and_dateRowChangeEvent(((Attendance_by_staff_and_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Attendance_by_staff_and_dateRowChanging != null)) {
                    this.Attendance_by_staff_and_dateRowChanging(this, new Attendance_by_staff_and_dateRowChangeEvent(((Attendance_by_staff_and_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Attendance_by_staff_and_dateRowDeleted != null)) {
                    this.Attendance_by_staff_and_dateRowDeleted(this, new Attendance_by_staff_and_dateRowChangeEvent(((Attendance_by_staff_and_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Attendance_by_staff_and_dateRowDeleting != null)) {
                    this.Attendance_by_staff_and_dateRowDeleting(this, new Attendance_by_staff_and_dateRowChangeEvent(((Attendance_by_staff_and_dateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAttendance_by_staff_and_dateRow(Attendance_by_staff_and_dateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_attendance ds = new DataSet_attendance();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Attendance_by_staff_and_dateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Attendance_selectRow : global::System.Data.DataRow {
            
            private Attendance_selectDataTable tableAttendance_select;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_selectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttendance_select = ((Attendance_selectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_select.AttendanceDateColumn]));
                }
                set {
                    this[this.tableAttendance_select.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tableAttendance_select.StaffCodeColumn]));
                }
                set {
                    this[this.tableAttendance_select.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tableAttendance_select.StaffNameColumn]));
                }
                set {
                    this[this.tableAttendance_select.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_select.DutyInColumn]));
                }
                set {
                    this[this.tableAttendance_select.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAttendance_select.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'Attendance_select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tableAttendance_select.LateDutyInColumn]));
                }
                set {
                    this[this.tableAttendance_select.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tableAttendance_select.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'Attendance_select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_select.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'Attendance_select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_select.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'Attendance_select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tableAttendance_select.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tableAttendance_select.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tableAttendance_select.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tableAttendance_select.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tableAttendance_select.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tableAttendance_select.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tableAttendance_select.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tableAttendance_select.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Attendance_select_by_dateRow : global::System.Data.DataRow {
            
            private Attendance_select_by_dateDataTable tableAttendance_select_by_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_select_by_dateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttendance_select_by_date = ((Attendance_select_by_dateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_select_by_date.AttendanceDateColumn]));
                }
                set {
                    this[this.tableAttendance_select_by_date.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tableAttendance_select_by_date.StaffCodeColumn]));
                }
                set {
                    this[this.tableAttendance_select_by_date.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tableAttendance_select_by_date.StaffNameColumn]));
                }
                set {
                    this[this.tableAttendance_select_by_date.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_select_by_date.DutyInColumn]));
                }
                set {
                    this[this.tableAttendance_select_by_date.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAttendance_select_by_date.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'Attendance_select_by_date\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select_by_date.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tableAttendance_select_by_date.LateDutyInColumn]));
                }
                set {
                    this[this.tableAttendance_select_by_date.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tableAttendance_select_by_date.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'Attendance_select_by_date\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select_by_date.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_select_by_date.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'Attendance_select_by_date\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select_by_date.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_select_by_date.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'Attendance_select_by_date\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_select_by_date.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tableAttendance_select_by_date.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tableAttendance_select_by_date.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tableAttendance_select_by_date.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tableAttendance_select_by_date.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tableAttendance_select_by_date.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tableAttendance_select_by_date.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tableAttendance_select_by_date.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tableAttendance_select_by_date.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Attendance_by_staffRow : global::System.Data.DataRow {
            
            private Attendance_by_staffDataTable tableAttendance_by_staff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_by_staffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttendance_by_staff = ((Attendance_by_staffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_by_staff.AttendanceDateColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tableAttendance_by_staff.StaffCodeColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tableAttendance_by_staff.StaffNameColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_by_staff.DutyInColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAttendance_by_staff.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'Attendance_by_staff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tableAttendance_by_staff.LateDutyInColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tableAttendance_by_staff.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'Attendance_by_staff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_by_staff.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'Attendance_by_staff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_by_staff.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'Attendance_by_staff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tableAttendance_by_staff.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tableAttendance_by_staff.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tableAttendance_by_staff.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tableAttendance_by_staff.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tableAttendance_by_staff.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tableAttendance_by_staff.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tableAttendance_by_staff.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tableAttendance_by_staff.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Attendance_by_staff_and_dateRow : global::System.Data.DataRow {
            
            private Attendance_by_staff_and_dateDataTable tableAttendance_by_staff_and_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Attendance_by_staff_and_dateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttendance_by_staff_and_date = ((Attendance_by_staff_and_dateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_by_staff_and_date.AttendanceDateColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tableAttendance_by_staff_and_date.StaffCodeColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tableAttendance_by_staff_and_date.StaffNameColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tableAttendance_by_staff_and_date.DutyInColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAttendance_by_staff_and_date.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'Attendance_by_staff_and_date\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tableAttendance_by_staff_and_date.LateDutyInColumn]));
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tableAttendance_by_staff_and_date.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'Attendance_by_staff_and_date\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_by_staff_and_date.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'Attendance_by_staff_and_date\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tableAttendance_by_staff_and_date.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'Attendance_by_staff_and_date\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAttendance_by_staff_and_date.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tableAttendance_by_staff_and_date.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tableAttendance_by_staff_and_date.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tableAttendance_by_staff_and_date.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tableAttendance_by_staff_and_date.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tableAttendance_by_staff_and_date.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tableAttendance_by_staff_and_date.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tableAttendance_by_staff_and_date.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tableAttendance_by_staff_and_date.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Attendance_selectRowChangeEvent : global::System.EventArgs {
            
            private Attendance_selectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectRowChangeEvent(Attendance_selectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_selectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Attendance_select_by_dateRowChangeEvent : global::System.EventArgs {
            
            private Attendance_select_by_dateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateRowChangeEvent(Attendance_select_by_dateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_select_by_dateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Attendance_by_staffRowChangeEvent : global::System.EventArgs {
            
            private Attendance_by_staffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffRowChangeEvent(Attendance_by_staffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Attendance_by_staff_and_dateRowChangeEvent : global::System.EventArgs {
            
            private Attendance_by_staff_and_dateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateRowChangeEvent(Attendance_by_staff_and_dateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Attendance_by_staff_and_dateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DWAMS.DataSet_attendanceTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Attendance_selectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attendance_selectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Attendance_select";
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"	SELECT TblDailyAttendance.AttendanceDate, TblStaff.StaffCode, TblStaff.StaffName, TblDailyAttendance.DutyIn, 
                      TblDailyAttendance.DutyOut, TblDailyAttendance.LateDutyIn, TblDailyAttendance.EarlyDutyOut, TblDailyAttendance.Remark1, TblDailyAttendance.Remark2
	FROM         TblStaff INNER JOIN
						  TblDailyAttendance ON TblStaff.StaffId = TblDailyAttendance.StaffId
	ORDER BY TblDailyAttendance.AttendanceDate desc, TblStaff.StaffCode	
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_attendance.Attendance_selectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_attendance.Attendance_selectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_attendance.Attendance_selectDataTable dataTable = new DataSet_attendance.Attendance_selectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Attendance_select_by_dateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attendance_select_by_dateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Attendance_select_by_date";
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     TblDailyAttendance.AttendanceDate, TblStaff.StaffCode, TblStaff.StaffName, TblDailyAttendance.DutyIn, TblDailyAttendance.DutyOut, TblDailyAttendance.LateDutyIn, TblDailyAttendance.EarlyDutyOut, TblDailyAttendance.Remark1, TblDailyAttendance.Remark2
FROM         TblStaff INNER JOIN
                      TblDailyAttendance ON TblStaff.StaffId = TblDailyAttendance.StaffId
WHERE     (TblDailyAttendance.AttendanceDate BETWEEN @startdate AND @enddate)
ORDER BY TblDailyAttendance.AttendanceDate DESC, TblStaff.StaffCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AttendanceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AttendanceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_attendance.Attendance_select_by_dateDataTable dataTable, System.DateTime startdate, System.DateTime enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startdate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(enddate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_attendance.Attendance_select_by_dateDataTable GetData(System.DateTime startdate, System.DateTime enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startdate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(enddate));
            DataSet_attendance.Attendance_select_by_dateDataTable dataTable = new DataSet_attendance.Attendance_select_by_dateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Attendance_by_staffTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attendance_by_staffTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Attendance_by_staff";
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     TblDailyAttendance.AttendanceDate, TblStaff.StaffCode, TblStaff.StaffName, TblDailyAttendance.DutyIn, TblDailyAttendance.DutyOut, TblDailyAttendance.LateDutyIn, TblDailyAttendance.EarlyDutyOut, TblDailyAttendance.Remark1, TblDailyAttendance.Remark2
FROM         TblStaff INNER JOIN
                      TblDailyAttendance ON TblStaff.StaffId = TblDailyAttendance.StaffId
WHERE     (TblDailyAttendance.StaffId = @staffid)
ORDER BY TblDailyAttendance.AttendanceDate DESC, TblStaff.StaffCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@staffid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, "StaffId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_attendance.Attendance_by_staffDataTable dataTable, string staffid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                throw new global::System.ArgumentNullException("staffid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(staffid));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_attendance.Attendance_by_staffDataTable GetData(string staffid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                throw new global::System.ArgumentNullException("staffid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(staffid));
            }
            DataSet_attendance.Attendance_by_staffDataTable dataTable = new DataSet_attendance.Attendance_by_staffDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Attendance_by_staff_and_dateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attendance_by_staff_and_dateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Attendance_by_staff_and_date";
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     TblDailyAttendance.AttendanceDate, TblStaff.StaffCode, TblStaff.StaffName, TblDailyAttendance.DutyIn, TblDailyAttendance.DutyOut, TblDailyAttendance.LateDutyIn, TblDailyAttendance.EarlyDutyOut, TblDailyAttendance.Remark1, TblDailyAttendance.Remark2
FROM         TblStaff INNER JOIN
                      TblDailyAttendance ON TblStaff.StaffId = TblDailyAttendance.StaffId
WHERE     (TblDailyAttendance.StaffId = @staffid) AND (TblDailyAttendance.AttendanceDate BETWEEN @startdate AND @enddate)
ORDER BY TblDailyAttendance.AttendanceDate DESC, TblStaff.StaffCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@staffid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, "StaffId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AttendanceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AttendanceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_attendance.Attendance_by_staff_and_dateDataTable dataTable, string staffid, System.DateTime startdate, System.DateTime enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                throw new global::System.ArgumentNullException("staffid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(staffid));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(startdate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(enddate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_attendance.Attendance_by_staff_and_dateDataTable GetData(string staffid, System.DateTime startdate, System.DateTime enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                throw new global::System.ArgumentNullException("staffid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(staffid));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(startdate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(enddate));
            DataSet_attendance.Attendance_by_staff_and_dateDataTable dataTable = new DataSet_attendance.Attendance_by_staff_and_dateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591