//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DWAMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_Report_Viewer")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_Report_Viewer : global::System.Data.DataSet {
        
        private spdStaffSelectDataTable tablespdStaffSelect;
        
        private staff_by_departmentDataTable tablestaff_by_department;
        
        private staff_by_positionDataTable tablestaff_by_position;
        
        private spdDailyAttendanceSelectDataTable tablespdDailyAttendanceSelect;
        
        private spdDailyAttendanceSelectbyStaffIdDataTable tablespdDailyAttendanceSelectbyStaffId;
        
        private spdDailyAttendanceSelectbyDateDataTable tablespdDailyAttendanceSelectbyDate;
        
        private spdDailyAttendanceSelectbyStaffIdDateDataTable tablespdDailyAttendanceSelectbyStaffIdDate;
        
        private spdSalaryPaymentSelectDataTable tablespdSalaryPaymentSelect;
        
        private spdAttendanceSummeryDataTable tablespdAttendanceSummery;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_Report_Viewer() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_Report_Viewer(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spdStaffSelect"] != null)) {
                    base.Tables.Add(new spdStaffSelectDataTable(ds.Tables["spdStaffSelect"]));
                }
                if ((ds.Tables["staff_by_department"] != null)) {
                    base.Tables.Add(new staff_by_departmentDataTable(ds.Tables["staff_by_department"]));
                }
                if ((ds.Tables["staff_by_position"] != null)) {
                    base.Tables.Add(new staff_by_positionDataTable(ds.Tables["staff_by_position"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelect"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectDataTable(ds.Tables["spdDailyAttendanceSelect"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyStaffId"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyStaffIdDataTable(ds.Tables["spdDailyAttendanceSelectbyStaffId"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyDate"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyDateDataTable(ds.Tables["spdDailyAttendanceSelectbyDate"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyStaffIdDate"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyStaffIdDateDataTable(ds.Tables["spdDailyAttendanceSelectbyStaffIdDate"]));
                }
                if ((ds.Tables["spdSalaryPaymentSelect"] != null)) {
                    base.Tables.Add(new spdSalaryPaymentSelectDataTable(ds.Tables["spdSalaryPaymentSelect"]));
                }
                if ((ds.Tables["spdAttendanceSummery"] != null)) {
                    base.Tables.Add(new spdAttendanceSummeryDataTable(ds.Tables["spdAttendanceSummery"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdStaffSelectDataTable spdStaffSelect {
            get {
                return this.tablespdStaffSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_by_departmentDataTable staff_by_department {
            get {
                return this.tablestaff_by_department;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_by_positionDataTable staff_by_position {
            get {
                return this.tablestaff_by_position;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdDailyAttendanceSelectDataTable spdDailyAttendanceSelect {
            get {
                return this.tablespdDailyAttendanceSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdDailyAttendanceSelectbyStaffIdDataTable spdDailyAttendanceSelectbyStaffId {
            get {
                return this.tablespdDailyAttendanceSelectbyStaffId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdDailyAttendanceSelectbyDateDataTable spdDailyAttendanceSelectbyDate {
            get {
                return this.tablespdDailyAttendanceSelectbyDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdDailyAttendanceSelectbyStaffIdDateDataTable spdDailyAttendanceSelectbyStaffIdDate {
            get {
                return this.tablespdDailyAttendanceSelectbyStaffIdDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdSalaryPaymentSelectDataTable spdSalaryPaymentSelect {
            get {
                return this.tablespdSalaryPaymentSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spdAttendanceSummeryDataTable spdAttendanceSummery {
            get {
                return this.tablespdAttendanceSummery;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_Report_Viewer cln = ((DataSet_Report_Viewer)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spdStaffSelect"] != null)) {
                    base.Tables.Add(new spdStaffSelectDataTable(ds.Tables["spdStaffSelect"]));
                }
                if ((ds.Tables["staff_by_department"] != null)) {
                    base.Tables.Add(new staff_by_departmentDataTable(ds.Tables["staff_by_department"]));
                }
                if ((ds.Tables["staff_by_position"] != null)) {
                    base.Tables.Add(new staff_by_positionDataTable(ds.Tables["staff_by_position"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelect"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectDataTable(ds.Tables["spdDailyAttendanceSelect"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyStaffId"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyStaffIdDataTable(ds.Tables["spdDailyAttendanceSelectbyStaffId"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyDate"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyDateDataTable(ds.Tables["spdDailyAttendanceSelectbyDate"]));
                }
                if ((ds.Tables["spdDailyAttendanceSelectbyStaffIdDate"] != null)) {
                    base.Tables.Add(new spdDailyAttendanceSelectbyStaffIdDateDataTable(ds.Tables["spdDailyAttendanceSelectbyStaffIdDate"]));
                }
                if ((ds.Tables["spdSalaryPaymentSelect"] != null)) {
                    base.Tables.Add(new spdSalaryPaymentSelectDataTable(ds.Tables["spdSalaryPaymentSelect"]));
                }
                if ((ds.Tables["spdAttendanceSummery"] != null)) {
                    base.Tables.Add(new spdAttendanceSummeryDataTable(ds.Tables["spdAttendanceSummery"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespdStaffSelect = ((spdStaffSelectDataTable)(base.Tables["spdStaffSelect"]));
            if ((initTable == true)) {
                if ((this.tablespdStaffSelect != null)) {
                    this.tablespdStaffSelect.InitVars();
                }
            }
            this.tablestaff_by_department = ((staff_by_departmentDataTable)(base.Tables["staff_by_department"]));
            if ((initTable == true)) {
                if ((this.tablestaff_by_department != null)) {
                    this.tablestaff_by_department.InitVars();
                }
            }
            this.tablestaff_by_position = ((staff_by_positionDataTable)(base.Tables["staff_by_position"]));
            if ((initTable == true)) {
                if ((this.tablestaff_by_position != null)) {
                    this.tablestaff_by_position.InitVars();
                }
            }
            this.tablespdDailyAttendanceSelect = ((spdDailyAttendanceSelectDataTable)(base.Tables["spdDailyAttendanceSelect"]));
            if ((initTable == true)) {
                if ((this.tablespdDailyAttendanceSelect != null)) {
                    this.tablespdDailyAttendanceSelect.InitVars();
                }
            }
            this.tablespdDailyAttendanceSelectbyStaffId = ((spdDailyAttendanceSelectbyStaffIdDataTable)(base.Tables["spdDailyAttendanceSelectbyStaffId"]));
            if ((initTable == true)) {
                if ((this.tablespdDailyAttendanceSelectbyStaffId != null)) {
                    this.tablespdDailyAttendanceSelectbyStaffId.InitVars();
                }
            }
            this.tablespdDailyAttendanceSelectbyDate = ((spdDailyAttendanceSelectbyDateDataTable)(base.Tables["spdDailyAttendanceSelectbyDate"]));
            if ((initTable == true)) {
                if ((this.tablespdDailyAttendanceSelectbyDate != null)) {
                    this.tablespdDailyAttendanceSelectbyDate.InitVars();
                }
            }
            this.tablespdDailyAttendanceSelectbyStaffIdDate = ((spdDailyAttendanceSelectbyStaffIdDateDataTable)(base.Tables["spdDailyAttendanceSelectbyStaffIdDate"]));
            if ((initTable == true)) {
                if ((this.tablespdDailyAttendanceSelectbyStaffIdDate != null)) {
                    this.tablespdDailyAttendanceSelectbyStaffIdDate.InitVars();
                }
            }
            this.tablespdSalaryPaymentSelect = ((spdSalaryPaymentSelectDataTable)(base.Tables["spdSalaryPaymentSelect"]));
            if ((initTable == true)) {
                if ((this.tablespdSalaryPaymentSelect != null)) {
                    this.tablespdSalaryPaymentSelect.InitVars();
                }
            }
            this.tablespdAttendanceSummery = ((spdAttendanceSummeryDataTable)(base.Tables["spdAttendanceSummery"]));
            if ((initTable == true)) {
                if ((this.tablespdAttendanceSummery != null)) {
                    this.tablespdAttendanceSummery.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_Report_Viewer";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_Report_Viewer.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespdStaffSelect = new spdStaffSelectDataTable();
            base.Tables.Add(this.tablespdStaffSelect);
            this.tablestaff_by_department = new staff_by_departmentDataTable();
            base.Tables.Add(this.tablestaff_by_department);
            this.tablestaff_by_position = new staff_by_positionDataTable();
            base.Tables.Add(this.tablestaff_by_position);
            this.tablespdDailyAttendanceSelect = new spdDailyAttendanceSelectDataTable();
            base.Tables.Add(this.tablespdDailyAttendanceSelect);
            this.tablespdDailyAttendanceSelectbyStaffId = new spdDailyAttendanceSelectbyStaffIdDataTable();
            base.Tables.Add(this.tablespdDailyAttendanceSelectbyStaffId);
            this.tablespdDailyAttendanceSelectbyDate = new spdDailyAttendanceSelectbyDateDataTable();
            base.Tables.Add(this.tablespdDailyAttendanceSelectbyDate);
            this.tablespdDailyAttendanceSelectbyStaffIdDate = new spdDailyAttendanceSelectbyStaffIdDateDataTable();
            base.Tables.Add(this.tablespdDailyAttendanceSelectbyStaffIdDate);
            this.tablespdSalaryPaymentSelect = new spdSalaryPaymentSelectDataTable();
            base.Tables.Add(this.tablespdSalaryPaymentSelect);
            this.tablespdAttendanceSummery = new spdAttendanceSummeryDataTable();
            base.Tables.Add(this.tablespdAttendanceSummery);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdStaffSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_by_department() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_by_position() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdDailyAttendanceSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdDailyAttendanceSelectbyStaffId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdDailyAttendanceSelectbyDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdDailyAttendanceSelectbyStaffIdDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdSalaryPaymentSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespdAttendanceSummery() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void spdStaffSelectRowChangeEventHandler(object sender, spdStaffSelectRowChangeEvent e);
        
        public delegate void staff_by_departmentRowChangeEventHandler(object sender, staff_by_departmentRowChangeEvent e);
        
        public delegate void staff_by_positionRowChangeEventHandler(object sender, staff_by_positionRowChangeEvent e);
        
        public delegate void spdDailyAttendanceSelectRowChangeEventHandler(object sender, spdDailyAttendanceSelectRowChangeEvent e);
        
        public delegate void spdDailyAttendanceSelectbyStaffIdRowChangeEventHandler(object sender, spdDailyAttendanceSelectbyStaffIdRowChangeEvent e);
        
        public delegate void spdDailyAttendanceSelectbyDateRowChangeEventHandler(object sender, spdDailyAttendanceSelectbyDateRowChangeEvent e);
        
        public delegate void spdDailyAttendanceSelectbyStaffIdDateRowChangeEventHandler(object sender, spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent e);
        
        public delegate void spdSalaryPaymentSelectRowChangeEventHandler(object sender, spdSalaryPaymentSelectRowChangeEvent e);
        
        public delegate void spdAttendanceSummeryRowChangeEventHandler(object sender, spdAttendanceSummeryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdStaffSelectDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAddressName;
            
            private global::System.Data.DataColumn columnDepName;
            
            private global::System.Data.DataColumn columnAddressId;
            
            private global::System.Data.DataColumn columnDepId;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnPositionId;
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnStaffPh;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnHireDate;
            
            private global::System.Data.DataColumn columnDesp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectDataTable() {
                this.TableName = "spdStaffSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdStaffSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdStaffSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressNameColumn {
                get {
                    return this.columnAddressName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepNameColumn {
                get {
                    return this.columnDepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressIdColumn {
                get {
                    return this.columnAddressId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepIdColumn {
                get {
                    return this.columnDepId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionIdColumn {
                get {
                    return this.columnPositionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffPhColumn {
                get {
                    return this.columnStaffPh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HireDateColumn {
                get {
                    return this.columnHireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DespColumn {
                get {
                    return this.columnDesp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRow this[int index] {
                get {
                    return ((spdStaffSelectRow)(this.Rows[index]));
                }
            }
            
            public event spdStaffSelectRowChangeEventHandler spdStaffSelectRowChanging;
            
            public event spdStaffSelectRowChangeEventHandler spdStaffSelectRowChanged;
            
            public event spdStaffSelectRowChangeEventHandler spdStaffSelectRowDeleting;
            
            public event spdStaffSelectRowChangeEventHandler spdStaffSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdStaffSelectRow(spdStaffSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRow AddspdStaffSelectRow(string AddressName, string DepName, string AddressId, string DepId, string Position, string PositionId, string StaffId, string StaffCode, string StaffName, string StaffPh, decimal BasicSalary, System.DateTime HireDate, string Desp) {
                spdStaffSelectRow rowspdStaffSelectRow = ((spdStaffSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressName,
                        DepName,
                        AddressId,
                        DepId,
                        Position,
                        PositionId,
                        StaffId,
                        StaffCode,
                        StaffName,
                        StaffPh,
                        BasicSalary,
                        HireDate,
                        Desp};
                rowspdStaffSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdStaffSelectRow);
                return rowspdStaffSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRow FindByAddressIdDepIdPositionIdStaffId(string AddressId, string DepId, string PositionId, string StaffId) {
                return ((spdStaffSelectRow)(this.Rows.Find(new object[] {
                            AddressId,
                            DepId,
                            PositionId,
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdStaffSelectDataTable cln = ((spdStaffSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdStaffSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressName = base.Columns["AddressName"];
                this.columnDepName = base.Columns["DepName"];
                this.columnAddressId = base.Columns["AddressId"];
                this.columnDepId = base.Columns["DepId"];
                this.columnPosition = base.Columns["Position"];
                this.columnPositionId = base.Columns["PositionId"];
                this.columnStaffId = base.Columns["StaffId"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnStaffPh = base.Columns["StaffPh"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnHireDate = base.Columns["HireDate"];
                this.columnDesp = base.Columns["Desp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressName = new global::System.Data.DataColumn("AddressName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressName);
                this.columnDepName = new global::System.Data.DataColumn("DepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepName);
                this.columnAddressId = new global::System.Data.DataColumn("AddressId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressId);
                this.columnDepId = new global::System.Data.DataColumn("DepId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepId);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnPositionId = new global::System.Data.DataColumn("PositionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionId);
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnStaffPh = new global::System.Data.DataColumn("StaffPh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffPh);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnHireDate = new global::System.Data.DataColumn("HireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHireDate);
                this.columnDesp = new global::System.Data.DataColumn("Desp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAddressId,
                                this.columnDepId,
                                this.columnPositionId,
                                this.columnStaffId}, true));
                this.columnAddressName.AllowDBNull = false;
                this.columnAddressName.MaxLength = 200;
                this.columnDepName.AllowDBNull = false;
                this.columnDepName.MaxLength = 100;
                this.columnAddressId.AllowDBNull = false;
                this.columnAddressId.MaxLength = 36;
                this.columnDepId.AllowDBNull = false;
                this.columnDepId.MaxLength = 36;
                this.columnPosition.AllowDBNull = false;
                this.columnPosition.MaxLength = 200;
                this.columnPositionId.AllowDBNull = false;
                this.columnPositionId.MaxLength = 36;
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.MaxLength = 36;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnStaffPh.AllowDBNull = false;
                this.columnStaffPh.MaxLength = 50;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnHireDate.AllowDBNull = false;
                this.columnDesp.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRow NewspdStaffSelectRow() {
                return ((spdStaffSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdStaffSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdStaffSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdStaffSelectRowChanged != null)) {
                    this.spdStaffSelectRowChanged(this, new spdStaffSelectRowChangeEvent(((spdStaffSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdStaffSelectRowChanging != null)) {
                    this.spdStaffSelectRowChanging(this, new spdStaffSelectRowChangeEvent(((spdStaffSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdStaffSelectRowDeleted != null)) {
                    this.spdStaffSelectRowDeleted(this, new spdStaffSelectRowChangeEvent(((spdStaffSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdStaffSelectRowDeleting != null)) {
                    this.spdStaffSelectRowDeleting(this, new spdStaffSelectRowChangeEvent(((spdStaffSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdStaffSelectRow(spdStaffSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdStaffSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_by_departmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAddressName;
            
            private global::System.Data.DataColumn columnDepName;
            
            private global::System.Data.DataColumn columnAddressId;
            
            private global::System.Data.DataColumn columnDepId;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnPositionId;
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnStaffPh;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnHireDate;
            
            private global::System.Data.DataColumn columnDesp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentDataTable() {
                this.TableName = "staff_by_department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_by_departmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_by_departmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressNameColumn {
                get {
                    return this.columnAddressName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepNameColumn {
                get {
                    return this.columnDepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressIdColumn {
                get {
                    return this.columnAddressId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepIdColumn {
                get {
                    return this.columnDepId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionIdColumn {
                get {
                    return this.columnPositionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffPhColumn {
                get {
                    return this.columnStaffPh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HireDateColumn {
                get {
                    return this.columnHireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DespColumn {
                get {
                    return this.columnDesp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRow this[int index] {
                get {
                    return ((staff_by_departmentRow)(this.Rows[index]));
                }
            }
            
            public event staff_by_departmentRowChangeEventHandler staff_by_departmentRowChanging;
            
            public event staff_by_departmentRowChangeEventHandler staff_by_departmentRowChanged;
            
            public event staff_by_departmentRowChangeEventHandler staff_by_departmentRowDeleting;
            
            public event staff_by_departmentRowChangeEventHandler staff_by_departmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_by_departmentRow(staff_by_departmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRow Addstaff_by_departmentRow(string AddressName, string DepName, string AddressId, string DepId, string Position, string PositionId, string StaffId, string StaffCode, string StaffName, string StaffPh, decimal BasicSalary, System.DateTime HireDate, string Desp) {
                staff_by_departmentRow rowstaff_by_departmentRow = ((staff_by_departmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressName,
                        DepName,
                        AddressId,
                        DepId,
                        Position,
                        PositionId,
                        StaffId,
                        StaffCode,
                        StaffName,
                        StaffPh,
                        BasicSalary,
                        HireDate,
                        Desp};
                rowstaff_by_departmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstaff_by_departmentRow);
                return rowstaff_by_departmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRow FindByAddressIdDepIdPositionIdStaffId(string AddressId, string DepId, string PositionId, string StaffId) {
                return ((staff_by_departmentRow)(this.Rows.Find(new object[] {
                            AddressId,
                            DepId,
                            PositionId,
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                staff_by_departmentDataTable cln = ((staff_by_departmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new staff_by_departmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressName = base.Columns["AddressName"];
                this.columnDepName = base.Columns["DepName"];
                this.columnAddressId = base.Columns["AddressId"];
                this.columnDepId = base.Columns["DepId"];
                this.columnPosition = base.Columns["Position"];
                this.columnPositionId = base.Columns["PositionId"];
                this.columnStaffId = base.Columns["StaffId"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnStaffPh = base.Columns["StaffPh"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnHireDate = base.Columns["HireDate"];
                this.columnDesp = base.Columns["Desp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressName = new global::System.Data.DataColumn("AddressName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressName);
                this.columnDepName = new global::System.Data.DataColumn("DepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepName);
                this.columnAddressId = new global::System.Data.DataColumn("AddressId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressId);
                this.columnDepId = new global::System.Data.DataColumn("DepId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepId);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnPositionId = new global::System.Data.DataColumn("PositionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionId);
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnStaffPh = new global::System.Data.DataColumn("StaffPh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffPh);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnHireDate = new global::System.Data.DataColumn("HireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHireDate);
                this.columnDesp = new global::System.Data.DataColumn("Desp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAddressId,
                                this.columnDepId,
                                this.columnPositionId,
                                this.columnStaffId}, true));
                this.columnAddressName.AllowDBNull = false;
                this.columnAddressName.MaxLength = 200;
                this.columnDepName.AllowDBNull = false;
                this.columnDepName.MaxLength = 100;
                this.columnAddressId.AllowDBNull = false;
                this.columnAddressId.MaxLength = 36;
                this.columnDepId.AllowDBNull = false;
                this.columnDepId.MaxLength = 36;
                this.columnPosition.AllowDBNull = false;
                this.columnPosition.MaxLength = 200;
                this.columnPositionId.AllowDBNull = false;
                this.columnPositionId.MaxLength = 36;
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.MaxLength = 36;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnStaffPh.AllowDBNull = false;
                this.columnStaffPh.MaxLength = 50;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnHireDate.AllowDBNull = false;
                this.columnDesp.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRow Newstaff_by_departmentRow() {
                return ((staff_by_departmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new staff_by_departmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(staff_by_departmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_by_departmentRowChanged != null)) {
                    this.staff_by_departmentRowChanged(this, new staff_by_departmentRowChangeEvent(((staff_by_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_by_departmentRowChanging != null)) {
                    this.staff_by_departmentRowChanging(this, new staff_by_departmentRowChangeEvent(((staff_by_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_by_departmentRowDeleted != null)) {
                    this.staff_by_departmentRowDeleted(this, new staff_by_departmentRowChangeEvent(((staff_by_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_by_departmentRowDeleting != null)) {
                    this.staff_by_departmentRowDeleting(this, new staff_by_departmentRowChangeEvent(((staff_by_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_by_departmentRow(staff_by_departmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_by_departmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_by_positionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAddressName;
            
            private global::System.Data.DataColumn columnDepName;
            
            private global::System.Data.DataColumn columnAddressId;
            
            private global::System.Data.DataColumn columnDepId;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnPositionId;
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnStaffPh;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnHireDate;
            
            private global::System.Data.DataColumn columnDesp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionDataTable() {
                this.TableName = "staff_by_position";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_by_positionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_by_positionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressNameColumn {
                get {
                    return this.columnAddressName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepNameColumn {
                get {
                    return this.columnDepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressIdColumn {
                get {
                    return this.columnAddressId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepIdColumn {
                get {
                    return this.columnDepId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionIdColumn {
                get {
                    return this.columnPositionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffPhColumn {
                get {
                    return this.columnStaffPh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HireDateColumn {
                get {
                    return this.columnHireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DespColumn {
                get {
                    return this.columnDesp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRow this[int index] {
                get {
                    return ((staff_by_positionRow)(this.Rows[index]));
                }
            }
            
            public event staff_by_positionRowChangeEventHandler staff_by_positionRowChanging;
            
            public event staff_by_positionRowChangeEventHandler staff_by_positionRowChanged;
            
            public event staff_by_positionRowChangeEventHandler staff_by_positionRowDeleting;
            
            public event staff_by_positionRowChangeEventHandler staff_by_positionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_by_positionRow(staff_by_positionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRow Addstaff_by_positionRow(string AddressName, string DepName, string AddressId, string DepId, string Position, string PositionId, string StaffId, string StaffCode, string StaffName, string StaffPh, decimal BasicSalary, System.DateTime HireDate, string Desp) {
                staff_by_positionRow rowstaff_by_positionRow = ((staff_by_positionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressName,
                        DepName,
                        AddressId,
                        DepId,
                        Position,
                        PositionId,
                        StaffId,
                        StaffCode,
                        StaffName,
                        StaffPh,
                        BasicSalary,
                        HireDate,
                        Desp};
                rowstaff_by_positionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstaff_by_positionRow);
                return rowstaff_by_positionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRow FindByAddressIdDepIdPositionIdStaffId(string AddressId, string DepId, string PositionId, string StaffId) {
                return ((staff_by_positionRow)(this.Rows.Find(new object[] {
                            AddressId,
                            DepId,
                            PositionId,
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                staff_by_positionDataTable cln = ((staff_by_positionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new staff_by_positionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressName = base.Columns["AddressName"];
                this.columnDepName = base.Columns["DepName"];
                this.columnAddressId = base.Columns["AddressId"];
                this.columnDepId = base.Columns["DepId"];
                this.columnPosition = base.Columns["Position"];
                this.columnPositionId = base.Columns["PositionId"];
                this.columnStaffId = base.Columns["StaffId"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnStaffPh = base.Columns["StaffPh"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnHireDate = base.Columns["HireDate"];
                this.columnDesp = base.Columns["Desp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressName = new global::System.Data.DataColumn("AddressName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressName);
                this.columnDepName = new global::System.Data.DataColumn("DepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepName);
                this.columnAddressId = new global::System.Data.DataColumn("AddressId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressId);
                this.columnDepId = new global::System.Data.DataColumn("DepId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepId);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnPositionId = new global::System.Data.DataColumn("PositionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionId);
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnStaffPh = new global::System.Data.DataColumn("StaffPh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffPh);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnHireDate = new global::System.Data.DataColumn("HireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHireDate);
                this.columnDesp = new global::System.Data.DataColumn("Desp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAddressId,
                                this.columnDepId,
                                this.columnPositionId,
                                this.columnStaffId}, true));
                this.columnAddressName.AllowDBNull = false;
                this.columnAddressName.MaxLength = 200;
                this.columnDepName.AllowDBNull = false;
                this.columnDepName.MaxLength = 100;
                this.columnAddressId.AllowDBNull = false;
                this.columnAddressId.MaxLength = 36;
                this.columnDepId.AllowDBNull = false;
                this.columnDepId.MaxLength = 36;
                this.columnPosition.AllowDBNull = false;
                this.columnPosition.MaxLength = 200;
                this.columnPositionId.AllowDBNull = false;
                this.columnPositionId.MaxLength = 36;
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.MaxLength = 36;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnStaffPh.AllowDBNull = false;
                this.columnStaffPh.MaxLength = 50;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnHireDate.AllowDBNull = false;
                this.columnDesp.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRow Newstaff_by_positionRow() {
                return ((staff_by_positionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new staff_by_positionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(staff_by_positionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_by_positionRowChanged != null)) {
                    this.staff_by_positionRowChanged(this, new staff_by_positionRowChangeEvent(((staff_by_positionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_by_positionRowChanging != null)) {
                    this.staff_by_positionRowChanging(this, new staff_by_positionRowChangeEvent(((staff_by_positionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_by_positionRowDeleted != null)) {
                    this.staff_by_positionRowDeleted(this, new staff_by_positionRowChangeEvent(((staff_by_positionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_by_positionRowDeleting != null)) {
                    this.staff_by_positionRowDeleting(this, new staff_by_positionRowChangeEvent(((staff_by_positionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_by_positionRow(staff_by_positionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_by_positionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdDailyAttendanceSelectDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectDataTable() {
                this.TableName = "spdDailyAttendanceSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdDailyAttendanceSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRow this[int index] {
                get {
                    return ((spdDailyAttendanceSelectRow)(this.Rows[index]));
                }
            }
            
            public event spdDailyAttendanceSelectRowChangeEventHandler spdDailyAttendanceSelectRowChanging;
            
            public event spdDailyAttendanceSelectRowChangeEventHandler spdDailyAttendanceSelectRowChanged;
            
            public event spdDailyAttendanceSelectRowChangeEventHandler spdDailyAttendanceSelectRowDeleting;
            
            public event spdDailyAttendanceSelectRowChangeEventHandler spdDailyAttendanceSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdDailyAttendanceSelectRow(spdDailyAttendanceSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRow AddspdDailyAttendanceSelectRow(string StaffId, System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                spdDailyAttendanceSelectRow rowspdDailyAttendanceSelectRow = ((spdDailyAttendanceSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowspdDailyAttendanceSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdDailyAttendanceSelectRow);
                return rowspdDailyAttendanceSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRow FindByStaffId(string StaffId) {
                return ((spdDailyAttendanceSelectRow)(this.Rows.Find(new object[] {
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdDailyAttendanceSelectDataTable cln = ((spdDailyAttendanceSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdDailyAttendanceSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaffId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.Unique = true;
                this.columnStaffId.MaxLength = 36;
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRow NewspdDailyAttendanceSelectRow() {
                return ((spdDailyAttendanceSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdDailyAttendanceSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdDailyAttendanceSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdDailyAttendanceSelectRowChanged != null)) {
                    this.spdDailyAttendanceSelectRowChanged(this, new spdDailyAttendanceSelectRowChangeEvent(((spdDailyAttendanceSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdDailyAttendanceSelectRowChanging != null)) {
                    this.spdDailyAttendanceSelectRowChanging(this, new spdDailyAttendanceSelectRowChangeEvent(((spdDailyAttendanceSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdDailyAttendanceSelectRowDeleted != null)) {
                    this.spdDailyAttendanceSelectRowDeleted(this, new spdDailyAttendanceSelectRowChangeEvent(((spdDailyAttendanceSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdDailyAttendanceSelectRowDeleting != null)) {
                    this.spdDailyAttendanceSelectRowDeleting(this, new spdDailyAttendanceSelectRowChangeEvent(((spdDailyAttendanceSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdDailyAttendanceSelectRow(spdDailyAttendanceSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdDailyAttendanceSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdDailyAttendanceSelectbyStaffIdDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDataTable() {
                this.TableName = "spdDailyAttendanceSelectbyStaffId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyStaffIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdDailyAttendanceSelectbyStaffIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRow this[int index] {
                get {
                    return ((spdDailyAttendanceSelectbyStaffIdRow)(this.Rows[index]));
                }
            }
            
            public event spdDailyAttendanceSelectbyStaffIdRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdRowChanging;
            
            public event spdDailyAttendanceSelectbyStaffIdRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdRowChanged;
            
            public event spdDailyAttendanceSelectbyStaffIdRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdRowDeleting;
            
            public event spdDailyAttendanceSelectbyStaffIdRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdDailyAttendanceSelectbyStaffIdRow(spdDailyAttendanceSelectbyStaffIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRow AddspdDailyAttendanceSelectbyStaffIdRow(string StaffId, System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                spdDailyAttendanceSelectbyStaffIdRow rowspdDailyAttendanceSelectbyStaffIdRow = ((spdDailyAttendanceSelectbyStaffIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowspdDailyAttendanceSelectbyStaffIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdDailyAttendanceSelectbyStaffIdRow);
                return rowspdDailyAttendanceSelectbyStaffIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRow FindByStaffId(string StaffId) {
                return ((spdDailyAttendanceSelectbyStaffIdRow)(this.Rows.Find(new object[] {
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdDailyAttendanceSelectbyStaffIdDataTable cln = ((spdDailyAttendanceSelectbyStaffIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdDailyAttendanceSelectbyStaffIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaffId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.Unique = true;
                this.columnStaffId.MaxLength = 36;
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRow NewspdDailyAttendanceSelectbyStaffIdRow() {
                return ((spdDailyAttendanceSelectbyStaffIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdDailyAttendanceSelectbyStaffIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdDailyAttendanceSelectbyStaffIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdRowChanged != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdRowChanged(this, new spdDailyAttendanceSelectbyStaffIdRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdRowChanging != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdRowChanging(this, new spdDailyAttendanceSelectbyStaffIdRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdRowDeleted != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdRowDeleted(this, new spdDailyAttendanceSelectbyStaffIdRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdRowDeleting != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdRowDeleting(this, new spdDailyAttendanceSelectbyStaffIdRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdDailyAttendanceSelectbyStaffIdRow(spdDailyAttendanceSelectbyStaffIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdDailyAttendanceSelectbyStaffIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdDailyAttendanceSelectbyDateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateDataTable() {
                this.TableName = "spdDailyAttendanceSelectbyDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdDailyAttendanceSelectbyDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRow this[int index] {
                get {
                    return ((spdDailyAttendanceSelectbyDateRow)(this.Rows[index]));
                }
            }
            
            public event spdDailyAttendanceSelectbyDateRowChangeEventHandler spdDailyAttendanceSelectbyDateRowChanging;
            
            public event spdDailyAttendanceSelectbyDateRowChangeEventHandler spdDailyAttendanceSelectbyDateRowChanged;
            
            public event spdDailyAttendanceSelectbyDateRowChangeEventHandler spdDailyAttendanceSelectbyDateRowDeleting;
            
            public event spdDailyAttendanceSelectbyDateRowChangeEventHandler spdDailyAttendanceSelectbyDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdDailyAttendanceSelectbyDateRow(spdDailyAttendanceSelectbyDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRow AddspdDailyAttendanceSelectbyDateRow(string StaffId, System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                spdDailyAttendanceSelectbyDateRow rowspdDailyAttendanceSelectbyDateRow = ((spdDailyAttendanceSelectbyDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowspdDailyAttendanceSelectbyDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdDailyAttendanceSelectbyDateRow);
                return rowspdDailyAttendanceSelectbyDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRow FindByStaffId(string StaffId) {
                return ((spdDailyAttendanceSelectbyDateRow)(this.Rows.Find(new object[] {
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdDailyAttendanceSelectbyDateDataTable cln = ((spdDailyAttendanceSelectbyDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdDailyAttendanceSelectbyDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaffId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.Unique = true;
                this.columnStaffId.MaxLength = 36;
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRow NewspdDailyAttendanceSelectbyDateRow() {
                return ((spdDailyAttendanceSelectbyDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdDailyAttendanceSelectbyDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdDailyAttendanceSelectbyDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdDailyAttendanceSelectbyDateRowChanged != null)) {
                    this.spdDailyAttendanceSelectbyDateRowChanged(this, new spdDailyAttendanceSelectbyDateRowChangeEvent(((spdDailyAttendanceSelectbyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdDailyAttendanceSelectbyDateRowChanging != null)) {
                    this.spdDailyAttendanceSelectbyDateRowChanging(this, new spdDailyAttendanceSelectbyDateRowChangeEvent(((spdDailyAttendanceSelectbyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdDailyAttendanceSelectbyDateRowDeleted != null)) {
                    this.spdDailyAttendanceSelectbyDateRowDeleted(this, new spdDailyAttendanceSelectbyDateRowChangeEvent(((spdDailyAttendanceSelectbyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdDailyAttendanceSelectbyDateRowDeleting != null)) {
                    this.spdDailyAttendanceSelectbyDateRowDeleting(this, new spdDailyAttendanceSelectbyDateRowChangeEvent(((spdDailyAttendanceSelectbyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdDailyAttendanceSelectbyDateRow(spdDailyAttendanceSelectbyDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdDailyAttendanceSelectbyDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdDailyAttendanceSelectbyStaffIdDateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnAttendanceDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnDutyIn;
            
            private global::System.Data.DataColumn columnDutyOut;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateDataTable() {
                this.TableName = "spdDailyAttendanceSelectbyStaffIdDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyStaffIdDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdDailyAttendanceSelectbyStaffIdDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceDateColumn {
                get {
                    return this.columnAttendanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyInColumn {
                get {
                    return this.columnDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyOutColumn {
                get {
                    return this.columnDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRow this[int index] {
                get {
                    return ((spdDailyAttendanceSelectbyStaffIdDateRow)(this.Rows[index]));
                }
            }
            
            public event spdDailyAttendanceSelectbyStaffIdDateRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdDateRowChanging;
            
            public event spdDailyAttendanceSelectbyStaffIdDateRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdDateRowChanged;
            
            public event spdDailyAttendanceSelectbyStaffIdDateRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdDateRowDeleting;
            
            public event spdDailyAttendanceSelectbyStaffIdDateRowChangeEventHandler spdDailyAttendanceSelectbyStaffIdDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdDailyAttendanceSelectbyStaffIdDateRow(spdDailyAttendanceSelectbyStaffIdDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRow AddspdDailyAttendanceSelectbyStaffIdDateRow(string StaffId, System.DateTime AttendanceDate, string StaffCode, string StaffName, System.DateTime DutyIn, System.DateTime DutyOut, decimal LateDutyIn, decimal EarlyDutyOut, string Remark1, string Remark2) {
                spdDailyAttendanceSelectbyStaffIdDateRow rowspdDailyAttendanceSelectbyStaffIdDateRow = ((spdDailyAttendanceSelectbyStaffIdDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        AttendanceDate,
                        StaffCode,
                        StaffName,
                        DutyIn,
                        DutyOut,
                        LateDutyIn,
                        EarlyDutyOut,
                        Remark1,
                        Remark2};
                rowspdDailyAttendanceSelectbyStaffIdDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdDailyAttendanceSelectbyStaffIdDateRow);
                return rowspdDailyAttendanceSelectbyStaffIdDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRow FindByStaffId(string StaffId) {
                return ((spdDailyAttendanceSelectbyStaffIdDateRow)(this.Rows.Find(new object[] {
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdDailyAttendanceSelectbyStaffIdDateDataTable cln = ((spdDailyAttendanceSelectbyStaffIdDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdDailyAttendanceSelectbyStaffIdDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnAttendanceDate = base.Columns["AttendanceDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnDutyIn = base.Columns["DutyIn"];
                this.columnDutyOut = base.Columns["DutyOut"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnAttendanceDate = new global::System.Data.DataColumn("AttendanceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendanceDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnDutyIn = new global::System.Data.DataColumn("DutyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyIn);
                this.columnDutyOut = new global::System.Data.DataColumn("DutyOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyOut);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaffId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.Unique = true;
                this.columnStaffId.MaxLength = 36;
                this.columnAttendanceDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnDutyIn.AllowDBNull = false;
                this.columnLateDutyIn.AllowDBNull = false;
                this.columnRemark1.MaxLength = 500;
                this.columnRemark2.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRow NewspdDailyAttendanceSelectbyStaffIdDateRow() {
                return ((spdDailyAttendanceSelectbyStaffIdDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdDailyAttendanceSelectbyStaffIdDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdDailyAttendanceSelectbyStaffIdDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdDateRowChanged != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdDateRowChanged(this, new spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdDateRowChanging != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdDateRowChanging(this, new spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdDateRowDeleted != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdDateRowDeleted(this, new spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdDailyAttendanceSelectbyStaffIdDateRowDeleting != null)) {
                    this.spdDailyAttendanceSelectbyStaffIdDateRowDeleting(this, new spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent(((spdDailyAttendanceSelectbyStaffIdDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdDailyAttendanceSelectbyStaffIdDateRow(spdDailyAttendanceSelectbyStaffIdDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdDailyAttendanceSelectbyStaffIdDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdSalaryPaymentSelectDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnPaymentId;
            
            private global::System.Data.DataColumn columnMonthDate;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnFine;
            
            private global::System.Data.DataColumn columnBonus;
            
            private global::System.Data.DataColumn columnNetSalary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectDataTable() {
                this.TableName = "spdSalaryPaymentSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdSalaryPaymentSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdSalaryPaymentSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentIdColumn {
                get {
                    return this.columnPaymentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthDateColumn {
                get {
                    return this.columnMonthDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FineColumn {
                get {
                    return this.columnFine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusColumn {
                get {
                    return this.columnBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSalaryColumn {
                get {
                    return this.columnNetSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRow this[int index] {
                get {
                    return ((spdSalaryPaymentSelectRow)(this.Rows[index]));
                }
            }
            
            public event spdSalaryPaymentSelectRowChangeEventHandler spdSalaryPaymentSelectRowChanging;
            
            public event spdSalaryPaymentSelectRowChangeEventHandler spdSalaryPaymentSelectRowChanged;
            
            public event spdSalaryPaymentSelectRowChangeEventHandler spdSalaryPaymentSelectRowDeleting;
            
            public event spdSalaryPaymentSelectRowChangeEventHandler spdSalaryPaymentSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdSalaryPaymentSelectRow(spdSalaryPaymentSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRow AddspdSalaryPaymentSelectRow(string StaffId, string PaymentId, System.DateTime MonthDate, string StaffCode, string StaffName, System.DateTime PaymentDate, decimal BasicSalary, decimal Fine, decimal Bonus, decimal NetSalary) {
                spdSalaryPaymentSelectRow rowspdSalaryPaymentSelectRow = ((spdSalaryPaymentSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        PaymentId,
                        MonthDate,
                        StaffCode,
                        StaffName,
                        PaymentDate,
                        BasicSalary,
                        Fine,
                        Bonus,
                        NetSalary};
                rowspdSalaryPaymentSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdSalaryPaymentSelectRow);
                return rowspdSalaryPaymentSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRow FindByPaymentId(string PaymentId) {
                return ((spdSalaryPaymentSelectRow)(this.Rows.Find(new object[] {
                            PaymentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdSalaryPaymentSelectDataTable cln = ((spdSalaryPaymentSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdSalaryPaymentSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnPaymentId = base.Columns["PaymentId"];
                this.columnMonthDate = base.Columns["MonthDate"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnFine = base.Columns["Fine"];
                this.columnBonus = base.Columns["Bonus"];
                this.columnNetSalary = base.Columns["NetSalary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnPaymentId = new global::System.Data.DataColumn("PaymentId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentId);
                this.columnMonthDate = new global::System.Data.DataColumn("MonthDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthDate);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnFine = new global::System.Data.DataColumn("Fine", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFine);
                this.columnBonus = new global::System.Data.DataColumn("Bonus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonus);
                this.columnNetSalary = new global::System.Data.DataColumn("NetSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSalary);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPaymentId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.MaxLength = 36;
                this.columnPaymentId.AllowDBNull = false;
                this.columnPaymentId.Unique = true;
                this.columnPaymentId.MaxLength = 36;
                this.columnMonthDate.AllowDBNull = false;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnPaymentDate.AllowDBNull = false;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnFine.AllowDBNull = false;
                this.columnBonus.AllowDBNull = false;
                this.columnNetSalary.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRow NewspdSalaryPaymentSelectRow() {
                return ((spdSalaryPaymentSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdSalaryPaymentSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdSalaryPaymentSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdSalaryPaymentSelectRowChanged != null)) {
                    this.spdSalaryPaymentSelectRowChanged(this, new spdSalaryPaymentSelectRowChangeEvent(((spdSalaryPaymentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdSalaryPaymentSelectRowChanging != null)) {
                    this.spdSalaryPaymentSelectRowChanging(this, new spdSalaryPaymentSelectRowChangeEvent(((spdSalaryPaymentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdSalaryPaymentSelectRowDeleted != null)) {
                    this.spdSalaryPaymentSelectRowDeleted(this, new spdSalaryPaymentSelectRowChangeEvent(((spdSalaryPaymentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdSalaryPaymentSelectRowDeleting != null)) {
                    this.spdSalaryPaymentSelectRowDeleting(this, new spdSalaryPaymentSelectRowChangeEvent(((spdSalaryPaymentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdSalaryPaymentSelectRow(spdSalaryPaymentSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdSalaryPaymentSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spdAttendanceSummeryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStaffId;
            
            private global::System.Data.DataColumn columnStaffCode;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnLateDutyIn;
            
            private global::System.Data.DataColumn columnEarlyDutyOut;
            
            private global::System.Data.DataColumn columnAbsentDay;
            
            private global::System.Data.DataColumn columnPresentDay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryDataTable() {
                this.TableName = "spdAttendanceSummery";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdAttendanceSummeryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spdAttendanceSummeryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffIdColumn {
                get {
                    return this.columnStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffCodeColumn {
                get {
                    return this.columnStaffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDutyInColumn {
                get {
                    return this.columnLateDutyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyDutyOutColumn {
                get {
                    return this.columnEarlyDutyOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsentDayColumn {
                get {
                    return this.columnAbsentDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentDayColumn {
                get {
                    return this.columnPresentDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRow this[int index] {
                get {
                    return ((spdAttendanceSummeryRow)(this.Rows[index]));
                }
            }
            
            public event spdAttendanceSummeryRowChangeEventHandler spdAttendanceSummeryRowChanging;
            
            public event spdAttendanceSummeryRowChangeEventHandler spdAttendanceSummeryRowChanged;
            
            public event spdAttendanceSummeryRowChangeEventHandler spdAttendanceSummeryRowDeleting;
            
            public event spdAttendanceSummeryRowChangeEventHandler spdAttendanceSummeryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspdAttendanceSummeryRow(spdAttendanceSummeryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRow AddspdAttendanceSummeryRow(string StaffId, string StaffCode, string StaffName, int LateDutyIn, int EarlyDutyOut, int AbsentDay, int PresentDay) {
                spdAttendanceSummeryRow rowspdAttendanceSummeryRow = ((spdAttendanceSummeryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaffId,
                        StaffCode,
                        StaffName,
                        LateDutyIn,
                        EarlyDutyOut,
                        AbsentDay,
                        PresentDay};
                rowspdAttendanceSummeryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspdAttendanceSummeryRow);
                return rowspdAttendanceSummeryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRow FindByStaffId(string StaffId) {
                return ((spdAttendanceSummeryRow)(this.Rows.Find(new object[] {
                            StaffId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spdAttendanceSummeryDataTable cln = ((spdAttendanceSummeryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spdAttendanceSummeryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaffId = base.Columns["StaffId"];
                this.columnStaffCode = base.Columns["StaffCode"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnLateDutyIn = base.Columns["LateDutyIn"];
                this.columnEarlyDutyOut = base.Columns["EarlyDutyOut"];
                this.columnAbsentDay = base.Columns["AbsentDay"];
                this.columnPresentDay = base.Columns["PresentDay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaffId = new global::System.Data.DataColumn("StaffId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffId);
                this.columnStaffCode = new global::System.Data.DataColumn("StaffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCode);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnLateDutyIn = new global::System.Data.DataColumn("LateDutyIn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDutyIn);
                this.columnEarlyDutyOut = new global::System.Data.DataColumn("EarlyDutyOut", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyDutyOut);
                this.columnAbsentDay = new global::System.Data.DataColumn("AbsentDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentDay);
                this.columnPresentDay = new global::System.Data.DataColumn("PresentDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentDay);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaffId}, true));
                this.columnStaffId.AllowDBNull = false;
                this.columnStaffId.Unique = true;
                this.columnStaffId.MaxLength = 36;
                this.columnStaffCode.AllowDBNull = false;
                this.columnStaffCode.MaxLength = 50;
                this.columnStaffName.AllowDBNull = false;
                this.columnStaffName.MaxLength = 200;
                this.columnLateDutyIn.ReadOnly = true;
                this.columnEarlyDutyOut.ReadOnly = true;
                this.columnAbsentDay.ReadOnly = true;
                this.columnPresentDay.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRow NewspdAttendanceSummeryRow() {
                return ((spdAttendanceSummeryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spdAttendanceSummeryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spdAttendanceSummeryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spdAttendanceSummeryRowChanged != null)) {
                    this.spdAttendanceSummeryRowChanged(this, new spdAttendanceSummeryRowChangeEvent(((spdAttendanceSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spdAttendanceSummeryRowChanging != null)) {
                    this.spdAttendanceSummeryRowChanging(this, new spdAttendanceSummeryRowChangeEvent(((spdAttendanceSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spdAttendanceSummeryRowDeleted != null)) {
                    this.spdAttendanceSummeryRowDeleted(this, new spdAttendanceSummeryRowChangeEvent(((spdAttendanceSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spdAttendanceSummeryRowDeleting != null)) {
                    this.spdAttendanceSummeryRowDeleting(this, new spdAttendanceSummeryRowChangeEvent(((spdAttendanceSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespdAttendanceSummeryRow(spdAttendanceSummeryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report_Viewer ds = new DataSet_Report_Viewer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spdAttendanceSummeryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdStaffSelectRow : global::System.Data.DataRow {
            
            private spdStaffSelectDataTable tablespdStaffSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdStaffSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdStaffSelect = ((spdStaffSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressName {
                get {
                    return ((string)(this[this.tablespdStaffSelect.AddressNameColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.AddressNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepName {
                get {
                    return ((string)(this[this.tablespdStaffSelect.DepNameColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.DepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressId {
                get {
                    return ((string)(this[this.tablespdStaffSelect.AddressIdColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.AddressIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepId {
                get {
                    return ((string)(this[this.tablespdStaffSelect.DepIdColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.DepIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Position {
                get {
                    return ((string)(this[this.tablespdStaffSelect.PositionColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PositionId {
                get {
                    return ((string)(this[this.tablespdStaffSelect.PositionIdColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.PositionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdStaffSelect.StaffIdColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdStaffSelect.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdStaffSelect.StaffNameColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffPh {
                get {
                    return ((string)(this[this.tablespdStaffSelect.StaffPhColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.StaffPhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tablespdStaffSelect.BasicSalaryColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HireDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdStaffSelect.HireDateColumn]));
                }
                set {
                    this[this.tablespdStaffSelect.HireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desp {
                get {
                    try {
                        return ((string)(this[this.tablespdStaffSelect.DespColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desp\' in table \'spdStaffSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdStaffSelect.DespColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDespNull() {
                return this.IsNull(this.tablespdStaffSelect.DespColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDespNull() {
                this[this.tablespdStaffSelect.DespColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_by_departmentRow : global::System.Data.DataRow {
            
            private staff_by_departmentDataTable tablestaff_by_department;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_by_departmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_by_department = ((staff_by_departmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressName {
                get {
                    return ((string)(this[this.tablestaff_by_department.AddressNameColumn]));
                }
                set {
                    this[this.tablestaff_by_department.AddressNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepName {
                get {
                    return ((string)(this[this.tablestaff_by_department.DepNameColumn]));
                }
                set {
                    this[this.tablestaff_by_department.DepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressId {
                get {
                    return ((string)(this[this.tablestaff_by_department.AddressIdColumn]));
                }
                set {
                    this[this.tablestaff_by_department.AddressIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepId {
                get {
                    return ((string)(this[this.tablestaff_by_department.DepIdColumn]));
                }
                set {
                    this[this.tablestaff_by_department.DepIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Position {
                get {
                    return ((string)(this[this.tablestaff_by_department.PositionColumn]));
                }
                set {
                    this[this.tablestaff_by_department.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PositionId {
                get {
                    return ((string)(this[this.tablestaff_by_department.PositionIdColumn]));
                }
                set {
                    this[this.tablestaff_by_department.PositionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablestaff_by_department.StaffIdColumn]));
                }
                set {
                    this[this.tablestaff_by_department.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablestaff_by_department.StaffCodeColumn]));
                }
                set {
                    this[this.tablestaff_by_department.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablestaff_by_department.StaffNameColumn]));
                }
                set {
                    this[this.tablestaff_by_department.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffPh {
                get {
                    return ((string)(this[this.tablestaff_by_department.StaffPhColumn]));
                }
                set {
                    this[this.tablestaff_by_department.StaffPhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tablestaff_by_department.BasicSalaryColumn]));
                }
                set {
                    this[this.tablestaff_by_department.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HireDate {
                get {
                    return ((global::System.DateTime)(this[this.tablestaff_by_department.HireDateColumn]));
                }
                set {
                    this[this.tablestaff_by_department.HireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desp {
                get {
                    try {
                        return ((string)(this[this.tablestaff_by_department.DespColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desp\' in table \'staff_by_department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_by_department.DespColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDespNull() {
                return this.IsNull(this.tablestaff_by_department.DespColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDespNull() {
                this[this.tablestaff_by_department.DespColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_by_positionRow : global::System.Data.DataRow {
            
            private staff_by_positionDataTable tablestaff_by_position;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_by_positionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_by_position = ((staff_by_positionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressName {
                get {
                    return ((string)(this[this.tablestaff_by_position.AddressNameColumn]));
                }
                set {
                    this[this.tablestaff_by_position.AddressNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepName {
                get {
                    return ((string)(this[this.tablestaff_by_position.DepNameColumn]));
                }
                set {
                    this[this.tablestaff_by_position.DepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressId {
                get {
                    return ((string)(this[this.tablestaff_by_position.AddressIdColumn]));
                }
                set {
                    this[this.tablestaff_by_position.AddressIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepId {
                get {
                    return ((string)(this[this.tablestaff_by_position.DepIdColumn]));
                }
                set {
                    this[this.tablestaff_by_position.DepIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Position {
                get {
                    return ((string)(this[this.tablestaff_by_position.PositionColumn]));
                }
                set {
                    this[this.tablestaff_by_position.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PositionId {
                get {
                    return ((string)(this[this.tablestaff_by_position.PositionIdColumn]));
                }
                set {
                    this[this.tablestaff_by_position.PositionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablestaff_by_position.StaffIdColumn]));
                }
                set {
                    this[this.tablestaff_by_position.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablestaff_by_position.StaffCodeColumn]));
                }
                set {
                    this[this.tablestaff_by_position.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablestaff_by_position.StaffNameColumn]));
                }
                set {
                    this[this.tablestaff_by_position.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffPh {
                get {
                    return ((string)(this[this.tablestaff_by_position.StaffPhColumn]));
                }
                set {
                    this[this.tablestaff_by_position.StaffPhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tablestaff_by_position.BasicSalaryColumn]));
                }
                set {
                    this[this.tablestaff_by_position.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HireDate {
                get {
                    return ((global::System.DateTime)(this[this.tablestaff_by_position.HireDateColumn]));
                }
                set {
                    this[this.tablestaff_by_position.HireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desp {
                get {
                    try {
                        return ((string)(this[this.tablestaff_by_position.DespColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desp\' in table \'staff_by_position\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_by_position.DespColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDespNull() {
                return this.IsNull(this.tablestaff_by_position.DespColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDespNull() {
                this[this.tablestaff_by_position.DespColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdDailyAttendanceSelectRow : global::System.Data.DataRow {
            
            private spdDailyAttendanceSelectDataTable tablespdDailyAttendanceSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdDailyAttendanceSelect = ((spdDailyAttendanceSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelect.StaffIdColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelect.AttendanceDateColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelect.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelect.StaffNameColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelect.DutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelect.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'spdDailyAttendanceSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tablespdDailyAttendanceSelect.LateDutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tablespdDailyAttendanceSelect.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'spdDailyAttendanceSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelect.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'spdDailyAttendanceSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelect.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'spdDailyAttendanceSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelect.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelect.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tablespdDailyAttendanceSelect.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelect.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tablespdDailyAttendanceSelect.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelect.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tablespdDailyAttendanceSelect.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelect.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tablespdDailyAttendanceSelect.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdDailyAttendanceSelectbyStaffIdRow : global::System.Data.DataRow {
            
            private spdDailyAttendanceSelectbyStaffIdDataTable tablespdDailyAttendanceSelectbyStaffId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyStaffIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdDailyAttendanceSelectbyStaffId = ((spdDailyAttendanceSelectbyStaffIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffId.StaffIdColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffId.AttendanceDateColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffId.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffId.StaffNameColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffId.DutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffId.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'spdDailyAttendanceSelectbyStaffId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tablespdDailyAttendanceSelectbyStaffId.LateDutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tablespdDailyAttendanceSelectbyStaffId.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'spdDailyAttendanceSelectbyStaffId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffId.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'spdDailyAttendanceSelectbyStaffId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffId.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'spdDailyAttendanceSelectbyStaffId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffId.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffId.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyStaffId.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffId.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyStaffId.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffId.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tablespdDailyAttendanceSelectbyStaffId.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffId.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tablespdDailyAttendanceSelectbyStaffId.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdDailyAttendanceSelectbyDateRow : global::System.Data.DataRow {
            
            private spdDailyAttendanceSelectbyDateDataTable tablespdDailyAttendanceSelectbyDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdDailyAttendanceSelectbyDate = ((spdDailyAttendanceSelectbyDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyDate.StaffIdColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyDate.AttendanceDateColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyDate.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyDate.StaffNameColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyDate.DutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyDate.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'spdDailyAttendanceSelectbyDate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tablespdDailyAttendanceSelectbyDate.LateDutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tablespdDailyAttendanceSelectbyDate.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'spdDailyAttendanceSelectbyDate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyDate.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'spdDailyAttendanceSelectbyDate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyDate.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'spdDailyAttendanceSelectbyDate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyDate.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyDate.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyDate.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyDate.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyDate.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyDate.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tablespdDailyAttendanceSelectbyDate.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyDate.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tablespdDailyAttendanceSelectbyDate.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdDailyAttendanceSelectbyStaffIdDateRow : global::System.Data.DataRow {
            
            private spdDailyAttendanceSelectbyStaffIdDateDataTable tablespdDailyAttendanceSelectbyStaffIdDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdDailyAttendanceSelectbyStaffIdDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdDailyAttendanceSelectbyStaffIdDate = ((spdDailyAttendanceSelectbyStaffIdDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffIdColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AttendanceDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.AttendanceDateColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.AttendanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffNameColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyIn {
                get {
                    return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyOut\' in table \'spdDailyAttendanceSelectbyStaffIdDate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDutyIn {
                get {
                    return ((decimal)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.LateDutyInColumn]));
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EarlyDutyOut {
                get {
                    try {
                        return ((decimal)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'spdDailyAttendanceSelectbyStaffIdDa" +
                                "te\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark1\' in table \'spdDailyAttendanceSelectbyStaffIdDate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark2\' in table \'spdDailyAttendanceSelectbyStaffIdDate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyStaffIdDate.DutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffIdDate.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tablespdDailyAttendanceSelectbyStaffIdDate.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark1Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark1Null() {
                this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemark2Null() {
                return this.IsNull(this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemark2Null() {
                this[this.tablespdDailyAttendanceSelectbyStaffIdDate.Remark2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdSalaryPaymentSelectRow : global::System.Data.DataRow {
            
            private spdSalaryPaymentSelectDataTable tablespdSalaryPaymentSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdSalaryPaymentSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdSalaryPaymentSelect = ((spdSalaryPaymentSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdSalaryPaymentSelect.StaffIdColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentId {
                get {
                    return ((string)(this[this.tablespdSalaryPaymentSelect.PaymentIdColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.PaymentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MonthDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdSalaryPaymentSelect.MonthDateColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.MonthDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdSalaryPaymentSelect.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdSalaryPaymentSelect.StaffNameColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PaymentDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespdSalaryPaymentSelect.PaymentDateColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tablespdSalaryPaymentSelect.BasicSalaryColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Fine {
                get {
                    return ((decimal)(this[this.tablespdSalaryPaymentSelect.FineColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.FineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bonus {
                get {
                    return ((decimal)(this[this.tablespdSalaryPaymentSelect.BonusColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.BonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetSalary {
                get {
                    return ((decimal)(this[this.tablespdSalaryPaymentSelect.NetSalaryColumn]));
                }
                set {
                    this[this.tablespdSalaryPaymentSelect.NetSalaryColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spdAttendanceSummeryRow : global::System.Data.DataRow {
            
            private spdAttendanceSummeryDataTable tablespdAttendanceSummery;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spdAttendanceSummeryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespdAttendanceSummery = ((spdAttendanceSummeryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffId {
                get {
                    return ((string)(this[this.tablespdAttendanceSummery.StaffIdColumn]));
                }
                set {
                    this[this.tablespdAttendanceSummery.StaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffCode {
                get {
                    return ((string)(this[this.tablespdAttendanceSummery.StaffCodeColumn]));
                }
                set {
                    this[this.tablespdAttendanceSummery.StaffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffName {
                get {
                    return ((string)(this[this.tablespdAttendanceSummery.StaffNameColumn]));
                }
                set {
                    this[this.tablespdAttendanceSummery.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LateDutyIn {
                get {
                    try {
                        return ((int)(this[this.tablespdAttendanceSummery.LateDutyInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateDutyIn\' in table \'spdAttendanceSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdAttendanceSummery.LateDutyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EarlyDutyOut {
                get {
                    try {
                        return ((int)(this[this.tablespdAttendanceSummery.EarlyDutyOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyDutyOut\' in table \'spdAttendanceSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdAttendanceSummery.EarlyDutyOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AbsentDay {
                get {
                    try {
                        return ((int)(this[this.tablespdAttendanceSummery.AbsentDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentDay\' in table \'spdAttendanceSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdAttendanceSummery.AbsentDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PresentDay {
                get {
                    try {
                        return ((int)(this[this.tablespdAttendanceSummery.PresentDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentDay\' in table \'spdAttendanceSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespdAttendanceSummery.PresentDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateDutyInNull() {
                return this.IsNull(this.tablespdAttendanceSummery.LateDutyInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateDutyInNull() {
                this[this.tablespdAttendanceSummery.LateDutyInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyDutyOutNull() {
                return this.IsNull(this.tablespdAttendanceSummery.EarlyDutyOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyDutyOutNull() {
                this[this.tablespdAttendanceSummery.EarlyDutyOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsentDayNull() {
                return this.IsNull(this.tablespdAttendanceSummery.AbsentDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsentDayNull() {
                this[this.tablespdAttendanceSummery.AbsentDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentDayNull() {
                return this.IsNull(this.tablespdAttendanceSummery.PresentDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentDayNull() {
                this[this.tablespdAttendanceSummery.PresentDayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdStaffSelectRowChangeEvent : global::System.EventArgs {
            
            private spdStaffSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRowChangeEvent(spdStaffSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdStaffSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_by_departmentRowChangeEvent : global::System.EventArgs {
            
            private staff_by_departmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRowChangeEvent(staff_by_departmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_departmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_by_positionRowChangeEvent : global::System.EventArgs {
            
            private staff_by_positionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRowChangeEvent(staff_by_positionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_by_positionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdDailyAttendanceSelectRowChangeEvent : global::System.EventArgs {
            
            private spdDailyAttendanceSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRowChangeEvent(spdDailyAttendanceSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdDailyAttendanceSelectbyStaffIdRowChangeEvent : global::System.EventArgs {
            
            private spdDailyAttendanceSelectbyStaffIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRowChangeEvent(spdDailyAttendanceSelectbyStaffIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdDailyAttendanceSelectbyDateRowChangeEvent : global::System.EventArgs {
            
            private spdDailyAttendanceSelectbyDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRowChangeEvent(spdDailyAttendanceSelectbyDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent : global::System.EventArgs {
            
            private spdDailyAttendanceSelectbyStaffIdDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRowChangeEvent(spdDailyAttendanceSelectbyStaffIdDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdDailyAttendanceSelectbyStaffIdDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdSalaryPaymentSelectRowChangeEvent : global::System.EventArgs {
            
            private spdSalaryPaymentSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRowChangeEvent(spdSalaryPaymentSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdSalaryPaymentSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spdAttendanceSummeryRowChangeEvent : global::System.EventArgs {
            
            private spdAttendanceSummeryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRowChangeEvent(spdAttendanceSummeryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spdAttendanceSummeryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DWAMS.DataSet_Report_ViewerTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdStaffSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdStaffSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdStaffSelect";
            tableMapping.ColumnMappings.Add("AddressName", "AddressName");
            tableMapping.ColumnMappings.Add("DepName", "DepName");
            tableMapping.ColumnMappings.Add("AddressId", "AddressId");
            tableMapping.ColumnMappings.Add("DepId", "DepId");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("PositionId", "PositionId");
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("StaffPh", "StaffPh");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("HireDate", "HireDate");
            tableMapping.ColumnMappings.Add("Desp", "Desp");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdStaffSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill_Staff(DataSet_Report_Viewer.spdStaffSelectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdStaffSelectDataTable GetData_Staff() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Report_Viewer.spdStaffSelectDataTable dataTable = new DataSet_Report_Viewer.spdStaffSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_by_departmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_by_departmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_by_department";
            tableMapping.ColumnMappings.Add("AddressName", "AddressName");
            tableMapping.ColumnMappings.Add("DepName", "DepName");
            tableMapping.ColumnMappings.Add("AddressId", "AddressId");
            tableMapping.ColumnMappings.Add("DepId", "DepId");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("PositionId", "PositionId");
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("StaffPh", "StaffPh");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("HireDate", "HireDate");
            tableMapping.ColumnMappings.Add("Desp", "Desp");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     TblAddress.AddressName, TblDepartment.DepName, TblAddress.AddressId, TblDepartment.DepId, TblPosition.Position, TblPosition.PositionId, TblStaff.StaffId, TblStaff.StaffCode, TblStaff.StaffName, TblStaff.StaffPh, TblStaff.BasicSalary, TblStaff.HireDate, TblStaff.Desp
FROM         TblAddress INNER JOIN
                      TblStaff ON TblAddress.AddressId = TblStaff.AddressId INNER JOIN
                      TblDepartment ON TblStaff.DepId = TblDepartment.DepId INNER JOIN
                      TblPosition ON TblStaff.PositionId = TblPosition.PositionId
WHERE     (TblStaff.DepId = @depid)
ORDER BY TblStaff.StaffCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, "DepId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill_Staff_by_department(DataSet_Report_Viewer.staff_by_departmentDataTable dataTable, string depid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((depid == null)) {
                throw new global::System.ArgumentNullException("depid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(depid));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.staff_by_departmentDataTable GetData_Staff_by_department(string depid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((depid == null)) {
                throw new global::System.ArgumentNullException("depid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(depid));
            }
            DataSet_Report_Viewer.staff_by_departmentDataTable dataTable = new DataSet_Report_Viewer.staff_by_departmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_by_positionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_by_positionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_by_position";
            tableMapping.ColumnMappings.Add("AddressName", "AddressName");
            tableMapping.ColumnMappings.Add("DepName", "DepName");
            tableMapping.ColumnMappings.Add("AddressId", "AddressId");
            tableMapping.ColumnMappings.Add("DepId", "DepId");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("PositionId", "PositionId");
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("StaffPh", "StaffPh");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("HireDate", "HireDate");
            tableMapping.ColumnMappings.Add("Desp", "Desp");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     TblAddress.AddressName, TblDepartment.DepName, TblAddress.AddressId, TblDepartment.DepId, TblPosition.Position, TblPosition.PositionId, TblStaff.StaffId, TblStaff.StaffCode, TblStaff.StaffName, TblStaff.StaffPh, TblStaff.BasicSalary, TblStaff.HireDate, TblStaff.Desp
FROM         TblAddress INNER JOIN
                      TblStaff ON TblAddress.AddressId = TblStaff.AddressId INNER JOIN
                      TblDepartment ON TblStaff.DepId = TblDepartment.DepId INNER JOIN
                      TblPosition ON TblStaff.PositionId = TblPosition.PositionId
WHERE     (TblStaff.DepId = @depid) AND (TblStaff.PositionId = @positionid)
ORDER BY TblStaff.StaffCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, "DepId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@positionid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, "PositionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.staff_by_positionDataTable dataTable, string depid, string positionid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((depid == null)) {
                throw new global::System.ArgumentNullException("depid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(depid));
            }
            if ((positionid == null)) {
                throw new global::System.ArgumentNullException("positionid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(positionid));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.staff_by_positionDataTable GetData(string depid, string positionid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((depid == null)) {
                throw new global::System.ArgumentNullException("depid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(depid));
            }
            if ((positionid == null)) {
                throw new global::System.ArgumentNullException("positionid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(positionid));
            }
            DataSet_Report_Viewer.staff_by_positionDataTable dataTable = new DataSet_Report_Viewer.staff_by_positionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdDailyAttendanceSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdDailyAttendanceSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdDailyAttendanceSelect";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdDailyAttendanceSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdDailyAttendanceSelectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdDailyAttendanceSelectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Report_Viewer.spdDailyAttendanceSelectDataTable dataTable = new DataSet_Report_Viewer.spdDailyAttendanceSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdDailyAttendanceSelectbyStaffIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdDailyAttendanceSelectbyStaffIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdDailyAttendanceSelectbyStaffId";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdDailyAttendanceSelectbyStaffId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@staffid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDataTable dataTable, string staffid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(staffid));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDataTable GetData(string staffid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(staffid));
            }
            DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDataTable dataTable = new DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdDailyAttendanceSelectbyDateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdDailyAttendanceSelectbyDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdDailyAttendanceSelectbyDate";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdDailyAttendanceSelectbyDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdDailyAttendanceSelectbyDateDataTable dataTable, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdDailyAttendanceSelectbyDateDataTable GetData(global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet_Report_Viewer.spdDailyAttendanceSelectbyDateDataTable dataTable = new DataSet_Report_Viewer.spdDailyAttendanceSelectbyDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdDailyAttendanceSelectbyStaffIdDateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdDailyAttendanceSelectbyStaffIdDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdDailyAttendanceSelectbyStaffIdDate";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("AttendanceDate", "AttendanceDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("DutyIn", "DutyIn");
            tableMapping.ColumnMappings.Add("DutyOut", "DutyOut");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdDailyAttendanceSelectbyStaffIdDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@staffid", global::System.Data.SqlDbType.Char, 36, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDateDataTable dataTable, string staffid, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(staffid));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDateDataTable GetData(string staffid, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((staffid == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(staffid));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDateDataTable dataTable = new DataSet_Report_Viewer.spdDailyAttendanceSelectbyStaffIdDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdSalaryPaymentSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdSalaryPaymentSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdSalaryPaymentSelect";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("PaymentId", "PaymentId");
            tableMapping.ColumnMappings.Add("MonthDate", "MonthDate");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("Fine", "Fine");
            tableMapping.ColumnMappings.Add("Bonus", "Bonus");
            tableMapping.ColumnMappings.Add("NetSalary", "NetSalary");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdSalaryPaymentSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdSalaryPaymentSelectDataTable dataTable, global::System.Nullable<int> month, global::System.Nullable<int> year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((month.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(month.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdSalaryPaymentSelectDataTable GetData(global::System.Nullable<int> month, global::System.Nullable<int> year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((month.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(month.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet_Report_Viewer.spdSalaryPaymentSelectDataTable dataTable = new DataSet_Report_Viewer.spdSalaryPaymentSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spdAttendanceSummeryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public spdAttendanceSummeryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spdAttendanceSummery";
            tableMapping.ColumnMappings.Add("StaffId", "StaffId");
            tableMapping.ColumnMappings.Add("StaffCode", "StaffCode");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("LateDutyIn", "LateDutyIn");
            tableMapping.ColumnMappings.Add("EarlyDutyOut", "EarlyDutyOut");
            tableMapping.ColumnMappings.Add("AbsentDay", "AbsentDay");
            tableMapping.ColumnMappings.Add("PresentDay", "PresentDay");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DWAMS.Properties.Settings.Default.DBAMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spdAttendanceSummery";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Report_Viewer.spdAttendanceSummeryDataTable dataTable, global::System.Nullable<int> month, global::System.Nullable<int> year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((month.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(month.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Report_Viewer.spdAttendanceSummeryDataTable GetData(global::System.Nullable<int> month, global::System.Nullable<int> year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((month.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(month.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet_Report_Viewer.spdAttendanceSummeryDataTable dataTable = new DataSet_Report_Viewer.spdAttendanceSummeryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591